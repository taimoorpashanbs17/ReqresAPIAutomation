{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-16T21:52:40.909Z",
    "end": "2025-01-16T21:52:41.418Z",
    "duration": 509,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "81fa9c89-7e4c-4795-91f1-62c6ae4e44ff",
      "title": "",
      "fullFile": "cypress/e2e/api-tests/getUsers.spec.js",
      "file": "cypress/e2e/api-tests/getUsers.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71785f25-8392-43cd-a61a-69047fd9bb49",
          "title": "Users API - GET Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetch user details for a valid user ID and verify Information",
              "fullTitle": "Users API - GET Requests Fetch user details for a valid user ID and verify Information",
              "timedOut": null,
              "duration": 243,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "userApiPage.getUserById(2).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.data).to.have.property('id', 2);\n  expect(response.body.data).to.have.property('email');\n});",
              "err": {},
              "uuid": "043a8b27-0db1-4c3e-be09-bbd09696595e",
              "parentUUID": "71785f25-8392-43cd-a61a-69047fd9bb49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter invalid user ID and make sure that status code is 404",
              "fullTitle": "Users API - GET Requests Enter invalid user ID and make sure that status code is 404",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "userApiPage.getUserById(9999).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "faf543db-0536-42a9-9087-01eb2699f80c",
              "parentUUID": "71785f25-8392-43cd-a61a-69047fd9bb49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "043a8b27-0db1-4c3e-be09-bbd09696595e",
            "faf543db-0536-42a9-9087-01eb2699f80c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 434,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}